{"version":3,"sources":["assets lazy /^/.*$/ groupOptions: {} namespace object","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","App","props","state","value","editorDisplay","editorWidth","editorCloseIconDisplay","editorMinimizeIconDisplay","previewDisplay","previewWidth","previewCloseIconDisplay","previewMinimizeIconDisplay","hoverTitle","createMarkDown","bind","handleChange","handleEditorClose","handleEditorMinimize","handlePreviewClose","handlePreviewMinimize","res","fetch","default","text","setState","__html","marked","this","target","className","style","display","minWidth","ariaHidden","title","onClick","placeholder","onChange","dangerouslySetInnerHTML","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e0ca947.chunk.js","sourcesContent":["var map = {\n\t\"./markdown-text.md\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./markdown-text.txt\": [\n\t\t21,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport marked from \"marked\";\nimport \"./App.css\";\n\n// marked.setOptions({\n//   renderer: new marked.Renderer(),\n//   highlight: function (code, lang) {\n//     const hljs = require(\"highlight.js\");\n//     const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\n//     return hljs.highlight(code, { language }).value;\n//   },\n//   langPrefix: \"hljs language-js\", // highlight.js css expects a top-level 'hljs' class.\n//   pedantic: false,\n//   gfm: true,\n//   breaks: false,\n//   sanitize: false,\n//   smartLists: true,\n//   smartypants: true,\n//   xhtml: false,\n// });\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"# Welcome to my React Markdown Previewer\",\n      editorDisplay: \"flex\",\n      editorWidth: \"48%\",\n      editorCloseIconDisplay: \"inline-block\",\n      editorMinimizeIconDisplay: \"none\",\n      previewDisplay: \"flex\",\n      previewWidth: \"48%\",\n      previewCloseIconDisplay: \"inline-block\",\n      previewMinimizeIconDisplay: \"none\",\n      hoverTitle: \"close\",\n    };\n    this.createMarkDown = this.createMarkDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditorClose = this.handleEditorClose.bind(this);\n    this.handleEditorMinimize = this.handleEditorMinimize.bind(this);\n    this.handlePreviewClose = this.handlePreviewClose.bind(this);\n    this.handlePreviewMinimize = this.handlePreviewMinimize.bind(this);\n  }\n\n  componentWillMount() {\n    const markdownText = \"markdown-text.md\";\n\n    import(`./assets/${markdownText}`).then((res) => {\n      fetch(res.default)\n        .then((res) => res.text())\n        .then((text) => this.setState({ value: text }));\n    });\n  }\n\n  createMarkDown() {\n    return { __html: marked(this.state.value) };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleEditorClose() {\n    this.setState({\n      editorDisplay: \"none\",\n      previewWidth: \"60%\",\n      previewCloseIconDisplay: \"none\",\n      previewMinimizeIconDisplay: \"inline-block\",\n      hoverTitle: \"minimize\",\n    });\n  }\n\n  handleEditorMinimize() {\n    this.setState({\n      previewDisplay: \"flex\",\n      editorWidth: \"48%\",\n      editorCloseIconDisplay: \"inline-block\",\n      editorMinimizeIconDisplay: \"none\",\n      hoverTitle: \"close\",\n    });\n  }\n\n  handlePreviewClose() {\n    this.setState({\n      previewDisplay: \"none\",\n      editorWidth: \"60%\",\n      editorCloseIconDisplay: \"none\",\n      editorMinimizeIconDisplay: \"inline-block\",\n      hoverTitle: \"minimize\",\n    });\n  }\n\n  handlePreviewMinimize() {\n    this.setState({\n      editorDisplay: \"flex\",\n      previewWidth: \"48%\",\n      previewCloseIconDisplay: \"inline-block\",\n      previewMinimizeIconDisplay: \"none\",\n      hoverTitle: \"close\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          className=\"editor\"\n          style={{\n            display: this.state.editorDisplay,\n            minWidth: this.state.editorWidth,\n          }}\n        >\n          <div className=\"e-heading-div\">\n            <div className=\"e-title-div\">\n              <i className=\"fa fa-free-code-camp\" aria-hidden=\"true\"></i>\n              <h5>Editor</h5>\n            </div>\n            <div className=\"e-close-div\">\n              <i\n                className=\"fa fa-arrows-alt\"\n                ariaHidden=\"true\"\n                title={this.state.hoverTitle}\n                onClick={this.handleEditorClose}\n                style={{ display: this.state.editorCloseIconDisplay }}\n              ></i>\n              <i\n                className=\"fa fa-compress\"\n                ariaHidden=\"true\"\n                title={this.state.hoverTitle}\n                onClick={this.handleEditorMinimize}\n                style={{ display: this.state.editorMinimizeIconDisplay }}\n              ></i>\n            </div>\n          </div>\n          <div className=\"editor-div\">\n            <textarea\n              id=\"editor\"\n              placeholder=\"Enter markdown text...\"\n              onChange={this.handleChange}\n              value={this.state.value}\n            />\n          </div>\n        </div>\n        <div\n          className=\"previewer\"\n          style={{\n            display: this.state.previewDisplay,\n            minWidth: this.state.previewWidth,\n          }}\n        >\n          <div className=\"p-heading-div\">\n            <div className=\"p-title-div\">\n              <i className=\"fa fa-free-code-camp\" aria-hidden=\"true\"></i>\n              <h5>Previewer</h5>\n            </div>\n            <div className=\"p-close-div\">\n              <i\n                className=\"fa fa-arrows-alt\"\n                ariaHidden=\"true\"\n                title={this.state.hoverTitle}\n                onClick={this.handlePreviewClose}\n                style={{ display: this.state.previewCloseIconDisplay }}\n              ></i>\n              <i\n                className=\"fa fa-compress\"\n                ariaHidden=\"true\"\n                title={this.state.hoverTitle}\n                onClick={this.handlePreviewMinimize}\n                style={{ display: this.state.previewMinimizeIconDisplay }}\n              ></i>\n            </div>\n          </div>\n          <div className=\"previewer-div\">\n            <div\n              id=\"preview\"\n              dangerouslySetInnerHTML={this.createMarkDown()}\n            ></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}